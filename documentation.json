{
  "openapi": "3.0.0",
  "info": {
    "title": "Backend Coderhouse",
    "description": "This is the documentation of the server",
    "contact": {
      "email": "ecalle87@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "//localhost:8081/api"
    }
  ],
  "paths": {
    "/users/signup": {
      "summary": "endpoint for new user signup",
      "description": "a description",
      "post": {
        "summary": "post to create a new user",
        "description": "perform a post to this endpoint to create a new user",
        "operationId": "userSignup",
        "requestBody": {
          "description": "create a new user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Missing fields"
          },
          "401": {
            "description": "User already exists"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "post to log in with an existing account",
        "description": "post to log in with an existing account",
        "operationId": "userLogin",
        "requestBody": {
          "description": "log in with an existing user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "summary": "post to log out",
        "description": "post to log out and end session",
        "operationId": "userLogout",
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/users/checkout": {
      "get": {
        "summary": "checkout and complete purchase",
        "description": "checkout and complete purchase",
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "cant checkout on an empty cart"
          },
          "401": {
            "description": "unauthorized, please log in"
          }
        }
      }
    },
    "/products/{productId}": {
      "summary": "main slug for products CRUD operations",
      "description": "a description",
      "get": {
        "summary": "get info on one product",
        "description": "get",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "mongoID"
            },
            "example": "62eea0e6fa15469f38f434b8"
          }
        ],
        "tags": ["product"],
        "responses": {
          "200": {
            "description": "not a valid product ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "list all products",
        "description": "will return a list of all products",
        "operationId": "getProducts",
        "tags": ["product"],
        "responses": {
          "default": {
            "description": "not a valid product ID"
          }
        }
      },
      "post": {
        "summary": "create a new product",
        "description": "create a new product",
        "operationId": "createProduct",
        "tags": ["product"],
        "requestBody": {
          "description": "Update an existent pet in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "products"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "default": {
            "description": "Default error sample response"
          }
        }
      },
      "delete": {
        "summary": "delete a product",
        "tags": ["product"],
        "operationId": "deleteProduct",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "put": {
        "summary": "update a product",
        "tags": ["product"],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/carts": {
      "get": {
        "summary": "list all carts",
        "description": "lists all carts, endpoint only available for admins",
        "operationId": "allCarts",
        "tags": ["cart"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized, user is not admin"
          }
        }
      },
      "post": {
        "summary": "add item(s) to user's cart",
        "description": "add item(s) to cart",
        "operationId": "addItemToCart",
        "tags": ["cart"],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "delete": {
        "summary": "remove item(s) to user's cart",
        "description": "add item to cart",
        "operationId": "removeIteFromCart",
        "tags": ["cart"],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/carts/products": {
      "summary": "shows the items in cart for a logged in user",
      "description": "shows the items in cart for a logged in user",
      "get": {
        "summary": "check items in cart",
        "operationId": "cartProducts",
        "tags": ["cart"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cart"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "required": [
          "name",
          "price",
          "stock",
          "description",
          "thumbnailURL",
          "categoryID"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "62ee9eb116316dfa5da61080"
          },
          "name": {
            "type": "string",
            "example": "Jetpack"
          },
          "price": {
            "type": "number",
            "example": 4500
          },
          "stock": {
            "type": "number",
            "example": 15
          },
          "description": {
            "type": "string",
            "example": "some description"
          },
          "thumbnailURL": {
            "type": "string",
            "example": "example/url.com"
          },
          "categoryID": {
            "type": "string",
            "example": "airborne gear"
          }
        }
      },
      "Cart": {
        "type": "object",
        "required": ["id", "owner"],
        "properties": {
          "id": {
            "type": "string",
            "example": "630e5d486cb1185cdddef3b9"
          },
          "owner": {
            "type": "string",
            "example": "630e5d486cb1185cdddef3b7"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "username": {
            "type": "string",
            "example": "JCarlos"
          },
          "password": {
            "type": "string",
            "example": "ssshhhhh"
          },
          "name": {
            "type": "string",
            "example": "Juan Carlos"
          },
          "adress": {
            "type": "string",
            "example": "calle falsa 123"
          },
          "age": {
            "type": "number",
            "example": 54
          },
          "phone": {
            "type": "string",
            "example": "+54 261 616 0016"
          },
          "admin": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "Order": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "example": "6304c974a1475b4a6449e100"
          },
          "user": {
            "type": "string",
            "example": "6304c974a1475b4a6449e0fe"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "orderStatus": {
            "type": "string",
            "enum": ["generado", "enviado", "pagado", "finalizado"]
          }
        }
      }
    }
  }
}
